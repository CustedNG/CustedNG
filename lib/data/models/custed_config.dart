///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class CustedConfigWeather {
/*
{
  "condition": "晴",
  "day_temp": "6-15",
  "now_temp": "9"
} 
*/

  String condition;
  String dayTemp;
  String nowTemp;

  CustedConfigWeather({
    this.condition,
    this.dayTemp,
    this.nowTemp,
  });
  CustedConfigWeather.fromJson(Map<String, dynamic> json) {
    condition = json['condition']?.toString();
    dayTemp = json['day_temp']?.toString();
    nowTemp = json['now_temp']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['condition'] = condition;
    data['day_temp'] = dayTemp;
    data['now_temp'] = nowTemp;
    return data;
  }
}

class CustedConfigBanner {
/*
{
  "img_url": "https://cdn3.cust.app/banner/example.png",
  "action_url": ""
} 
*/

  String imgUrl;
  String actionUrl;

  CustedConfigBanner({
    this.imgUrl,
    this.actionUrl,
  });
  CustedConfigBanner.fromJson(Map<String, dynamic> json) {
    imgUrl = json['img_url']?.toString();
    actionUrl = json['action_url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['img_url'] = imgUrl;
    data['action_url'] = actionUrl;
    return data;
  }
}

class CustedConfigTesterList {
/*
{
  "name": "LollipopKit",
  "url": "https://github.com/LollipopKit"
} 
*/

  String name;
  String url;

  CustedConfigTesterList({
    this.name,
    this.url,
  });
  CustedConfigTesterList.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['url'] = url;
    return data;
  }
}

class CustedConfigUpdateChangelog {
/*
{
  "android": "",
  "ios": ""
} 
*/

  String android;
  String ios;

  CustedConfigUpdateChangelog({
    this.android,
    this.ios,
  });
  CustedConfigUpdateChangelog.fromJson(Map<String, dynamic> json) {
    android = json['android']?.toString();
    ios = json['ios']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['android'] = android;
    data['ios'] = ios;
    return data;
  }
}

class CustedConfigUpdateUrl {
/*
{
  "android": "",
  "ios": ""
} 
*/

  String android;
  String ios;

  CustedConfigUpdateUrl({
    this.android,
    this.ios,
  });
  CustedConfigUpdateUrl.fromJson(Map<String, dynamic> json) {
    android = json['android']?.toString();
    ios = json['ios']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['android'] = android;
    data['ios'] = ios;
    return data;
  }
}

class CustedConfigUpdateVersion {
/*
{
  "android": 695,
  "ios": 695
} 
*/

  int android;
  int ios;

  CustedConfigUpdateVersion({
    this.android,
    this.ios,
  });
  CustedConfigUpdateVersion.fromJson(Map<String, dynamic> json) {
    android = json['android']?.toInt();
    ios = json['ios']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['android'] = android;
    data['ios'] = ios;
    return data;
  }
}

class CustedConfigUpdate {
/*
{
  "version": {
    "android": 695,
    "ios": 695
  },
  "url": {
    "android": "",
    "ios": ""
  },
  "changelog": {
    "android": "",
    "ios": ""
  }
} 
*/

  CustedConfigUpdateVersion version;
  CustedConfigUpdateUrl url;
  CustedConfigUpdateChangelog changelog;

  CustedConfigUpdate({
    this.version,
    this.url,
    this.changelog,
  });
  CustedConfigUpdate.fromJson(Map<String, dynamic> json) {
    version = (json['version'] != null)
        ? CustedConfigUpdateVersion.fromJson(json['version'])
        : null;
    url = (json['url'] != null)
        ? CustedConfigUpdateUrl.fromJson(json['url'])
        : null;
    changelog = (json['changelog'] != null)
        ? CustedConfigUpdateChangelog.fromJson(json['changelog'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (version != null) {
      data['version'] = version.toJson();
    }
    if (url != null) {
      data['url'] = url.toJson();
    }
    if (changelog != null) {
      data['changelog'] = changelog.toJson();
    }
    return data;
  }
}

class CustedConfigNotify {
/*
{
  "version": 695,
  "content": ""
} 
*/

  int version;
  String content;

  CustedConfigNotify({
    this.version,
    this.content,
  });
  CustedConfigNotify.fromJson(Map<String, dynamic> json) {
    version = json['version']?.toInt();
    content = json['content']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['version'] = version;
    data['content'] = content;
    return data;
  }
}

class CustedConfig {
/*
{
  "notify": [
    {
      "version": 695,
      "content": ""
    }
  ],
  "jw_url": [
    "https://jwgls0.cust.edu.cn"
  ],
  "update": {
    "version": {
      "android": 695,
      "ios": 695
    },
    "url": {
      "android": "",
      "ios": ""
    },
    "changelog": {
      "android": "",
      "ios": ""
    }
  },
  "not_show_real_ui": [
    695
  ],
  "use_kbpro": [
    "695"
  ],
  "tester_list": [
    {
      "name": "LollipopKit",
      "url": "https://github.com/LollipopKit"
    }
  ],
  "banner": {
    "img_url": "https://cdn3.cust.app/banner/example.png",
    "action_url": ""
  },
  "have_exam": true,
  "weather": {
    "condition": "晴",
    "day_temp": "6-15",
    "now_temp": "9"
  },
  "school_calendar": ""
} 
*/

  List<CustedConfigNotify> notify;
  List<String> jwUrl;
  CustedConfigUpdate update;
  List<int> notShowRealUi;
  List<String> useKbpro;
  List<CustedConfigTesterList> testerList;
  CustedConfigBanner banner;
  bool haveExam;
  CustedConfigWeather weather;
  String schoolCalendar;

  CustedConfig({
    this.notify,
    this.jwUrl,
    this.update,
    this.notShowRealUi,
    this.useKbpro,
    this.testerList,
    this.banner,
    this.haveExam,
    this.weather,
    this.schoolCalendar,
  });
  CustedConfig.fromJson(Map<String, dynamic> json) {
    if (json['notify'] != null) {
      final v = json['notify'];
      final arr0 = <CustedConfigNotify>[];
      v.forEach((v) {
        arr0.add(CustedConfigNotify.fromJson(v));
      });
      notify = arr0;
    }
    if (json['jw_url'] != null) {
      final v = json['jw_url'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      jwUrl = arr0;
    }
    update = (json['update'] != null)
        ? CustedConfigUpdate.fromJson(json['update'])
        : null;
    if (json['not_show_real_ui'] != null) {
      final v = json['not_show_real_ui'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      notShowRealUi = arr0;
    }
    if (json['use_kbpro'] != null) {
      final v = json['use_kbpro'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      useKbpro = arr0;
    }
    if (json['tester_list'] != null) {
      final v = json['tester_list'];
      final arr0 = <CustedConfigTesterList>[];
      v.forEach((v) {
        arr0.add(CustedConfigTesterList.fromJson(v));
      });
      testerList = arr0;
    }
    banner = (json['banner'] != null)
        ? CustedConfigBanner.fromJson(json['banner'])
        : null;
    haveExam = json['have_exam'];
    weather = (json['weather'] != null)
        ? CustedConfigWeather.fromJson(json['weather'])
        : null;
    schoolCalendar = json['school_calendar']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (notify != null) {
      final v = notify;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data['notify'] = arr0;
    }
    if (jwUrl != null) {
      final v = jwUrl;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v);
      });
      data['jw_url'] = arr0;
    }
    if (update != null) {
      data['update'] = update.toJson();
    }
    if (notShowRealUi != null) {
      final v = notShowRealUi;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v);
      });
      data['not_show_real_ui'] = arr0;
    }
    if (useKbpro != null) {
      final v = useKbpro;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v);
      });
      data['use_kbpro'] = arr0;
    }
    if (testerList != null) {
      final v = testerList;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data['tester_list'] = arr0;
    }
    if (banner != null) {
      data['banner'] = banner.toJson();
    }
    data['have_exam'] = haveExam;
    if (weather != null) {
      data['weather'] = weather.toJson();
    }
    data['school_calendar'] = schoolCalendar;
    return data;
  }
}
